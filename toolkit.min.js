class Toolkit extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"})}static get observedAttributes(){return["component"]}async attributeChangedCallback(t,e,a){"component"===t&&e!==a&&await this.#a(a)}async #a(t){try{let e=await this.#b(t);this.shadow.innerHTML="",this.shadow.appendChild(e.content.cloneNode(!0))}catch(a){}}async #b(o){let n=await fetch(o);if(!n.ok)throw Error(`Не удалось загрузить шаблон компонента по адресу: ${o}`);let i=await n.text(),s=document.createElement("template");return s.innerHTML=i,s}static async regComponent(t,e){let a=await Toolkit.#c(e);class o extends HTMLElement{constructor(){super();let t=this.attachShadow({mode:"open"}),e=a.content.cloneNode(!0);t.appendChild(e)}}customElements.define(t,o)}static async #c(l){let c=await fetch(l);if(!c.ok)throw Error(`Не удалось загрузить шаблон компонента по адресу: ${l}`);let r=await c.text(),d=document.createElement("template");return d.innerHTML=r,d}}customElements.define("toolkit-load",Toolkit);
